// <auto-generated />
using System;
using E_CommerceProject.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_CommerceProject.Infrastructure.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20240316235522_AddInitialData")]
    partial class AddInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_CommerceProject.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lenovo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dell"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HP"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Asus"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Acer"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Microsoft"
                        },
                        new
                        {
                            Id = 8,
                            Name = "MSI"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Alienware"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Huawei"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Fujitsu"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Google"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Razer"
                        });
                });

            modelBuilder.Entity("E_CommerceProject.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("E_CommerceProject.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DeliverdDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int?>("UserAddressId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("E_CommerceProject.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("IsReviewed")
                        .HasColumnType("bit");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("E_CommerceProject.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 4,
                            Description = "The Apple MacBook Air is a lightweight and portable laptop with excellent battery life.",
                            Discount = 50m,
                            Model = "MacBook Air",
                            Name = "Apple MacBook Air",
                            Price = 40000m
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 4,
                            Description = "The Apple MacBook Pro is a high-performance laptop loved by professionals.",
                            Discount = 20m,
                            Model = "MacBook Pro",
                            Name = "Apple MacBook Pro",
                            Price = 80000m
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            Description = "The Dell XPS 13 is a sleek and powerful laptop with a stunning display.",
                            Discount = 0m,
                            Model = "XPS 13",
                            Name = "Dell XPS 13",
                            Price = 40000m
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            Description = "The Dell Inspiron 15 is a versatile laptop suitable for everyday use.",
                            Discount = 13m,
                            Model = "Inspiron 15",
                            Name = "Dell Inspiron 15",
                            Price = 35000m
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 3,
                            Description = "The HP Spectre x360 is a stylish 2-in-1 laptop with powerful performance.",
                            Discount = 15m,
                            Model = "Spectre x360",
                            Name = "HP Spectre x360",
                            Price = 25000m
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 3,
                            Description = "The HP Pavilion 14 is a budget-friendly laptop with decent specifications.",
                            Discount = 60m,
                            Model = "Pavilion 14",
                            Name = "HP Pavilion 14",
                            Price = 15000m
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 4,
                            Description = "The Apple MacBook Air is a lightweight and portable laptop with excellent battery life.",
                            Discount = 10m,
                            Model = "MacBook Air",
                            Name = "Apple MacBook Air",
                            Price = 28000m
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 4,
                            Description = "The Apple MacBook Pro is a high-performance laptop loved by professionals.",
                            Discount = 12m,
                            Model = "MacBook Pro",
                            Name = "Apple MacBook Pro",
                            Price = 30000m
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 4,
                            Description = "The Apple iMac is a sleek and powerful all-in-one desktop computer.",
                            Discount = 0m,
                            Model = "iMac",
                            Name = "Apple iMac",
                            Price = 16000m
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 2,
                            Description = "The Dell XPS 13 is a sleek and powerful laptop with a stunning display.",
                            Discount = 90m,
                            Model = "XPS 13",
                            Name = "Dell XPS 13",
                            Price = 14000m
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 2,
                            Description = "The Dell Inspiron 15 is a versatile laptop suitable for everyday use.",
                            Discount = 18m,
                            Model = "Inspiron 15",
                            Name = "Dell Inspiron 15",
                            Price = 30000m
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 2,
                            Description = "The Dell G5 Gaming Desktop is a powerful gaming machine with immersive graphics.",
                            Discount = 20m,
                            Model = "G5 Gaming Desktop",
                            Name = "Dell G5 Gaming Desktop",
                            Price = 38000m
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 3,
                            Description = "The HP Spectre x360 is a stylish 2-in-1 laptop with powerful performance.",
                            Discount = 19m,
                            Model = "Spectre x360",
                            Name = "HP Spectre x360",
                            Price = 26000m
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 3,
                            Description = "The HP Pavilion 14 is a budget-friendly laptop with decent specifications.",
                            Discount = 0m,
                            Model = "Pavilion 14",
                            Name = "HP Pavilion 14",
                            Price = 6000m
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 3,
                            Description = "The HP EliteBook 840 is a business laptop with top-notch security features.",
                            Discount = 80m,
                            Model = "EliteBook 840",
                            Name = "HP EliteBook 840",
                            Price = 50000m
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 4,
                            Description = "The Apple MacBook Air is a lightweight and portable laptop with excellent battery life.",
                            Discount = 15m,
                            Model = "MacBook Air",
                            Name = "Apple MacBook Air",
                            Price = 18000m
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 2,
                            Description = "The Dell XPS 13 is a sleek and powerful laptop with a stunning display.",
                            Discount = 5m,
                            Model = "XPS 13",
                            Name = "Dell XPS 13",
                            Price = 13000m
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 3,
                            Description = "The HP Spectre x360 is a stylish 2-in-1 laptop with powerful performance.",
                            Discount = 10m,
                            Model = "Spectre x360",
                            Name = "HP Spectre x360",
                            Price = 12000m
                        },
                        new
                        {
                            Id = 19,
                            BrandId = 1,
                            Description = "The Lenovo ThinkCentre M720 is a compact and reliable desktop computer for business use.",
                            Discount = 6m,
                            Model = "ThinkCentre M720",
                            Name = "Lenovo ThinkCentre M720",
                            Price = 15000m
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 5,
                            Description = "The ASUS ROG Strix G15 is a powerful gaming desktop with RGB lighting and high-performance components.",
                            Discount = 60m,
                            Model = "ROG Strix G15",
                            Name = "ASUS ROG Strix G15",
                            Price = 80000m
                        },
                        new
                        {
                            Id = 21,
                            BrandId = 6,
                            Description = "The Acer Aspire TC is a budget-friendly desktop computer with decent performance.",
                            Discount = 15m,
                            Model = "Aspire TC",
                            Name = "Acer Aspire TC",
                            Price = 18000m
                        },
                        new
                        {
                            Id = 22,
                            BrandId = 2,
                            Description = "The Dell Inspiron 27 is an all-in-one desktop computer with a large display and powerful performance.",
                            Discount = 10m,
                            Model = "Inspiron 27",
                            Name = "Dell Inspiron 27",
                            Price = 22000m
                        },
                        new
                        {
                            Id = 23,
                            BrandId = 5,
                            Description = "The ASUS ZenBook Pro is a premium laptop with a stunning 4K display and high-performance components.",
                            Discount = 15m,
                            Model = "ZenBook Pro",
                            Name = "ASUS ZenBook Pro",
                            Price = 28000m
                        },
                        new
                        {
                            Id = 24,
                            BrandId = 3,
                            Description = "The HP Pavilion Gaming Desktop is a gaming powerhouse with advanced graphics and smooth gameplay.",
                            Discount = 80m,
                            Model = "Pavilion Gaming Desktop",
                            Name = "HP Pavilion Gaming Desktop",
                            Price = 15000m
                        },
                        new
                        {
                            Id = 25,
                            BrandId = 1,
                            Description = "The Lenovo Legion Y540 is a gaming laptop with powerful hardware and immersive gaming experience.",
                            Discount = 12m,
                            Model = "Legion Y540",
                            Name = "Lenovo Legion Y540",
                            Price = 20000m
                        },
                        new
                        {
                            Id = 26,
                            BrandId = 4,
                            Description = "The Apple iMac is a sleek all-in-one desktop computer with a stunning Retina display and powerful performance.",
                            Discount = 20m,
                            Model = "iMac",
                            Name = "Apple iMac",
                            Price = 24000m
                        },
                        new
                        {
                            Id = 27,
                            BrandId = 2,
                            Description = "The Dell G5 is a gaming laptop with high-performance hardware and immersive gaming features.",
                            Discount = 10m,
                            Model = "G5 Gaming Laptop",
                            Name = "Dell G5 Gaming Laptop",
                            Price = 18000m
                        },
                        new
                        {
                            Id = 28,
                            BrandId = 3,
                            Description = "The HP Envy 15 is a premium laptop with a sleek design and powerful performance for multimedia and productivity tasks.",
                            Discount = 15m,
                            Model = "Envy 15",
                            Name = "HP Envy 15",
                            Price = 16000m
                        },
                        new
                        {
                            Id = 29,
                            BrandId = 1,
                            Description = "The Lenovo IdeaCentre 5 is a compact and versatile desktop computer suitable for home and office use.",
                            Discount = 50m,
                            Model = "IdeaCentre 5",
                            Name = "Lenovo IdeaCentre 5",
                            Price = 8990m
                        },
                        new
                        {
                            Id = 30,
                            BrandId = 5,
                            Description = "The ASUS VivoBook S15 is a stylish and lightweight laptop with a vibrant display and long battery life.",
                            Discount = 0m,
                            Model = "VivoBook S15",
                            Name = "ASUS VivoBook S15",
                            Price = 9990m
                        },
                        new
                        {
                            Id = 31,
                            BrandId = 10,
                            Description = "The Samsung Galaxy Book Pro is a thin and lightweight laptop with a stunning AMOLED display and powerful performance.",
                            Discount = 10m,
                            Model = "Galaxy Book Pro",
                            Name = "Samsung Galaxy Book Pro",
                            Price = 14990m
                        },
                        new
                        {
                            Id = 32,
                            BrandId = 2,
                            Description = "The Dell Alienware Aurora R10 is a high-performance gaming desktop with powerful hardware and customizable lighting.",
                            Discount = 20m,
                            Model = "Alienware Aurora R10",
                            Name = "Dell Alienware Aurora R10",
                            Price = 28000m
                        },
                        new
                        {
                            Id = 33,
                            BrandId = 3,
                            Description = "The HP Omen 15 is a gaming laptop with a sleek design, high-refresh-rate display, and powerful performance for gaming enthusiasts.",
                            Discount = 15m,
                            Model = "Omen 15",
                            Name = "HP Omen 15",
                            Price = 17999m
                        },
                        new
                        {
                            Id = 34,
                            BrandId = 4,
                            Description = "The Apple MacBook Air is a lightweight and portable laptop with a stunning Retina display and all-day battery life.",
                            Discount = 10m,
                            Model = "MacBook Air",
                            Name = "Apple MacBook Air",
                            Price = 12990m
                        },
                        new
                        {
                            Id = 35,
                            BrandId = 14,
                            Description = "The Razer Blade 15 is a premium gaming laptop with a sleek design, high-refresh-rate display, and powerful performance.",
                            Discount = 15m,
                            Model = "Blade 15",
                            Name = "Razer Blade 15",
                            Price = 23990m
                        },
                        new
                        {
                            Id = 36,
                            BrandId = 1,
                            Description = "The Lenovo ThinkPad X1 Carbon is a premium business laptop with a durable build, long battery life, and top-notch performance.",
                            Discount = 20m,
                            Model = "ThinkPad X1 Carbon",
                            Name = "Lenovo ThinkPad X1 Carbon",
                            Price = 18990m
                        },
                        new
                        {
                            Id = 37,
                            BrandId = 5,
                            Description = "The ASUS ROG Zephyrus G14 is a powerful gaming laptop with an ultra-portable design and impressive performance.",
                            Discount = 5m,
                            Model = "ROG Zephyrus G14",
                            Name = "ASUS ROG Zephyrus G14",
                            Price = 17000m
                        },
                        new
                        {
                            Id = 38,
                            BrandId = 8,
                            Description = "The MSI GS66 Stealth is a high-performance gaming laptop with a sleek design and powerful components.",
                            Discount = 13m,
                            Model = "GS66 Stealth",
                            Name = "MSI GS66 Stealth",
                            Price = 23999m
                        },
                        new
                        {
                            Id = 39,
                            BrandId = 8,
                            Description = "The MSI Prestige 14 is a stylish and powerful laptop designed for creative professionals.",
                            Discount = 15m,
                            Model = "Prestige 14",
                            Name = "MSI Prestige 14",
                            Price = 15990m
                        },
                        new
                        {
                            Id = 40,
                            BrandId = 7,
                            Description = "The Microsoft Surface Laptop 4 is a sleek and versatile laptop with a premium design and excellent performance.",
                            Discount = 15m,
                            Model = "Surface Laptop 4",
                            Name = "Microsoft Surface Laptop 4",
                            Price = 23000m
                        },
                        new
                        {
                            Id = 41,
                            BrandId = 7,
                            Description = "The Microsoft Surface Pro 7 is a powerful 2-in-1 tablet-laptop hybrid with a detachable keyboard and versatile functionality.",
                            Discount = 10m,
                            Model = "Surface Pro 7",
                            Name = "Microsoft Surface Pro 7",
                            Price = 20000m
                        });
                });

            modelBuilder.Entity("E_CommerceProject.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("E_CommerceProject.Models.Review", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("E_CommerceProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("E_CommerceProject.Models.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("E_CommerceProject.Models.UserCart", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("UserCarts");
                });

            modelBuilder.Entity("E_CommerceProject.Models.WishList", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("E_CommerceProject.Models.Order", b =>
                {
                    b.HasOne("E_CommerceProject.Models.UserAddress", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserAddressId");

                    b.HasOne("E_CommerceProject.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_CommerceProject.Models.OrderDetails", b =>
                {
                    b.HasOne("E_CommerceProject.Models.Order", "Order")
                        .WithMany("OrdersDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceProject.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_CommerceProject.Models.Product", b =>
                {
                    b.HasOne("E_CommerceProject.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("E_CommerceProject.Models.ProductImage", b =>
                {
                    b.HasOne("E_CommerceProject.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_CommerceProject.Models.Review", b =>
                {
                    b.HasOne("E_CommerceProject.Models.Order", "Order")
                        .WithMany("Reviews")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("E_CommerceProject.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("E_CommerceProject.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_CommerceProject.Models.UserAddress", b =>
                {
                    b.HasOne("E_CommerceProject.Models.User", "User")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_CommerceProject.Models.UserCart", b =>
                {
                    b.HasOne("E_CommerceProject.Models.Product", "Product")
                        .WithMany("UserCarts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceProject.Models.User", "User")
                        .WithMany("UserCarts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_CommerceProject.Models.WishList", b =>
                {
                    b.HasOne("E_CommerceProject.Models.Product", "Product")
                        .WithMany("WishLists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceProject.Models.User", "User")
                        .WithMany("WishLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_CommerceProject.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("E_CommerceProject.Models.Order", b =>
                {
                    b.Navigation("OrdersDetails");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("E_CommerceProject.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");

                    b.Navigation("Reviews");

                    b.Navigation("UserCarts");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("E_CommerceProject.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("UserAddresses");

                    b.Navigation("UserCarts");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("E_CommerceProject.Models.UserAddress", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
